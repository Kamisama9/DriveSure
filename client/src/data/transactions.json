CREATE TABLE users (
    id CHAR(36) PRIMARY KEY,
    email VARCHAR(255) NOT NULL UNIQUE,
    phone_number VARCHAR(16) UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    first_name VARCHAR(100) NOT NULL,
    middle_name VARCHAR(100),
    last_name VARCHAR(100),
    city VARCHAR(20) NOT NULL,
    state VARCHAR(20) NOT NULL,
    is_email_verified BOOLEAN DEFAULT FALSE,
    is_phone_verified BOOLEAN DEFAULT FALSE,
    role ENUM('rider','driver','admin') NOT NULL,
    role_description VARCHAR(255),
    status ENUM('active','suspended','deleted') DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
CREATE TABLE drivers (
    id CHAR(36) PRIMARY KEY,
    user_id CHAR(36) NOT NULL UNIQUE,
    aadhar_card CHAR(12) NOT NULL UNIQUE,
    pan_card CHAR(10) NOT NULL UNIQUE,
    is_aadhaar_verified BOOLEAN DEFAULT FALSE,
    is_pan_verified BOOLEAN DEFAULT FALSE,
    driver_license VARCHAR(20) NOT NULL UNIQUE,
    driver_license_expiry DATE,
    is_driver_license_verified BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT chk_pan_format CHECK (pan_card REGEXP '^[A-Z]{5}[0-9]{4}[A-Z]$'),
    CONSTRAINT chk_aadhaar_format CHECK (aadhar_card REGEXP '^[0-9]{12}$'),
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);
CREATE TABLE vehicles (
    id CHAR(36) PRIMARY KEY,
    owner_id CHAR(36) NOT NULL,
    vehicle_type ENUM('bike','auto','sedan','suv') NOT NULL,
    rc_number VARCHAR(20) NOT NULL UNIQUE,
    is_rc_verified BOOLEAN DEFAULT FALSE,
    puc_number VARCHAR(50),
    puc_expiry DATE,
    is_puc_verified BOOLEAN DEFAULT FALSE,
    insurance_policy_number VARCHAR(64),
    insurance_expiry DATE,
    is_insurance_verified BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (owner_id) REFERENCES drivers(id) ON DELETE CASCADE
);
CREATE TABLE payments (
    id CHAR(36) PRIMARY KEY,
    payment_method ENUM('cash','upi','card','wallet') NOT NULL,
    payment_status ENUM('pending','paid','failed','refunded','cancelled') NOT NULL DEFAULT 'pending',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
CREATE TABLE bookings (
    id CHAR(36) PRIMARY KEY,
    pickup VARCHAR(255) NOT NULL,
    dropoff VARCHAR(255) NOT NULL,
    driver_id CHAR(36) NULL,    
    rider_id CHAR(36) NOT NULL,
    vehicle_id CHAR(36) NULL,  
    booking_status ENUM('requested','accepted','arrived','in_progress','completed','cancelled','no_show') NOT NULL DEFAULT 'requested',
    fare DECIMAL(10,2) NULL,
    distance DECIMAL(8,2) NULL,
    payment_status ENUM('pending','paid','failed','refunded','cancelled') NOT NULL DEFAULT 'pending',
    payment_id CHAR(36) NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (driver_id) REFERENCES drivers(id) ON DELETE SET NULL,
    FOREIGN KEY (rider_id) REFERENCES riders(id) ON DELETE RESTRICT,
    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id) ON DELETE SET NULL,
    FOREIGN KEY (payment_id) REFERENCES payments(id) ON DELETE SET NULL,
    UNIQUE KEY uniq_booking_payment (payment_id)
);
CREATE TABLE driver_reviews (
    id CHAR(36) PRIMARY KEY,
    booking_id CHAR(36) NOT NULL,
    rating TINYINT NOT NULL CHECK (rating BETWEEN 1 AND 5),
    review TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (booking_id) REFERENCES bookings(id) ON DELETE CASCADE,
    UNIQUE KEY uniq_review_per_booking (booking_id)
);
CREATE TABLE support_tickets (
    id CHAR(36) PRIMARY KEY,
    rider_id CHAR(36) NOT NULL,
    subject VARCHAR(255) NOT NULL,
    status ENUM('open', 'in_progress', 'resolved', 'closed') DEFAULT 'open',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (rider_id) REFERENCES riders(id) ON DELETE CASCADE
);
CREATE TABLE ticket_messages (
    id CHAR(36) PRIMARY KEY,
    ticket_id CHAR(36) NOT NULL,
    sender_id CHAR(36) NOT NULL,
    message TEXT NOT NULL,
    sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ticket_id) REFERENCES support_tickets(id) ON DELETE CASCADE,
    FOREIGN KEY (sender_id) REFERENCES users(id) ON DELETE CASCADE
);
 CREATE TABLE location_pricing ( 

    id INT PRIMARY KEY, 

    city VARCHAR(100) NOT NULL, 

    state VARCHAR(100) NOT NULL, 

    price_per_km DECIMAL(10,2) NOT NULL, 

    created_at DATETIME NOT NULL, 

    updated_at DATETIME NOT NULL 

); 

CREATE TABLE commission_structure ( 

    id INT PRIMARY KEY, 

    min_value INT NOT NULL, 

    max_value INT NOT NULL, 

    commission_percentage DECIMAL(5,2) NOT NULL, 

    description VARCHAR(255), 

    created_at DATETIME NOT NULL, 

    updated_at DATETIME NOT NULL 

); 